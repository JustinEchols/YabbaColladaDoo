
#if 0
internal void
AnimationUpdate(model *Model, f32 dT)
{
	animation_info *AnimInfo = &Model->AnimationsInfo;
	AnimInfo->CurrentTime += dT;
	if(AnimInfo->CurrentTime > 0.03f)
	{
		AnimInfo->KeyFrameIndex += 1;
		if(AnimInfo->KeyFrameIndex >= AnimInfo->TimeCount)
		{
			AnimInfo->KeyFrameIndex = 0;
		}

		AnimInfo->CurrentTime = 0.0f;
	}

	for(u32 MeshIndex = 0; MeshIndex < Model->MeshCount; ++MeshIndex)
	{
		mesh *Mesh = Model->Meshes + MeshIndex;
		joint RootJoint = Mesh->Joints[0];
		mat4 RootJointT = RootJoint.Transform;
		mat4 RootInvBind = Mesh->InvBindTransforms[0];

		u32 JointIndex = JointIndexGet(AnimInfo->JointNames, AnimInfo->JointCount, RootJoint.Name);
		if(JointIndex != -1)
		{
			// TODO(Justin): Blend between keyframes
			RootJointT = AnimInfo->Transforms[JointIndex][AnimInfo->KeyFrameIndex];
		}

		Mesh->JointTransforms[0] = RootJointT;
		Mesh->ModelSpaceTransforms[0] = RootJointT * RootInvBind;
		for(u32 Index = 1; Index < Mesh->JointCount; ++Index)
		{
			joint *Joint = Mesh->Joints + Index;
			mat4 JointTransform = Joint->Transform;

			JointIndex = JointIndexGet(AnimInfo->JointNames, AnimInfo->JointCount, Joint->Name);
			if(JointIndex != -1)
			{
				JointTransform = AnimInfo->Transforms[JointIndex][AnimInfo->KeyFrameIndex];
			}

			mat4 ParentTransform = Mesh->JointTransforms[Joint->ParentIndex];
			JointTransform = ParentTransform * JointTransform;
			mat4 InvBind = Mesh->InvBindTransforms[Index];

			Mesh->JointTransforms[Index] = JointTransform;
			Mesh->ModelSpaceTransforms[Index] = JointTransform * InvBind;
		}
	}
}
#endif
